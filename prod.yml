version: '2'
services:
  nginx:
    build:
      context: ./
      dockerfile: "./docker/source/nginx/prod/Dockerfile"
    volumes:
      - "./app/okocrm:/app"
      - "./docker/source/nginx/prod/conf.d:/etc/nginx/conf.d:ro"
      - "./docker/logs/prod:/var/log/nginx"
    expose:
      - "80"
    ports:
      - "${EXTERNAL_WEB_PROD_PORT}:80"
    env_file:
      - "./docker/env/prod/APP_ENV.env"
      - "./docker/env/prod/VIRTUAL_HOST.env"
  db:
    build:
      context: ./
      dockerfile: "./docker/source/mysql/dev/Dockerfile"
    volumes:
      - "db_data:/var/lib/mysql"
      - "./docker/source/mysql/db_dump/db_okocrm:/docker-entrypoint-initdb.d"
      - "./docker/source/mysql/tmp:/var/tmp"
    ports:
      - "33061:3306"
    env_file:
      - "./docker/env/prod/db.env"
  php:
    image: "${APP_NAME}-php-prod:${TAG}"
    build:
      context: ./
      dockerfile: "./docker/source/php/prod/Dockerfile"
    volumes:
      - "./app/okocrm:/app"
    env_file:
      - "./docker/env/prod/APP_ENV.env"
  nuxt:
    build: ./nuxt
    environment:
      - HOST=0.0.0.0
      - BASE_URL=${NUXT_BASE_URL_PROD}
    ports:
      - "${EXTERNAL_NUXT_DEV_PORT}:3000"
    volumes:
      - "./nuxt/oko/node_modules:/app/node_modules"
      - "./nuxt/oko:/app"
      - "./nuxt/logs:/root/.npm/_logs"
    command: bash -c "chmod -R 777 /app/node_modules && npm install && npm run build && npm run start" # dev
  redis:
    image: redis:alpine
    command: redis-server --appendonly yes --requirepass Au4JPDFP2eQVEptG
    volumes:
      - ./redis/data:/data
volumes:
  db_data:
    external: false